{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction UserAPI(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n  const [history, setHistory] = useState([]);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          setCart(res.data.cart);\n        } catch (err) {\n          alert(err.response.data.message);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n  useEffect(() => {\n    if (token) {\n      const getHistory = async () => {\n        const res = await axios.get('/user/history', {\n          headers: {\n            Authorization: token\n          }\n        });\n      };\n\n      getHistory();\n    }\n  }, [token]);\n\n  const addCart = async product => {\n    if (!isLogged) return alert(\"Please login to continue buying\");\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      setCart([...cart, { ...product,\n        quantity: 1\n      }]);\n      await axios.patch('/user/addcart', {\n        cart: [...cart, { ...product,\n          quantity: 1\n        }]\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n    } else {\n      alert(\"This product has been added to cart.\");\n    }\n\n    console.log(cart);\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    cart: [cart, setCart],\n    addCart: addCart\n  };\n}\n\n_s(UserAPI, \"uZ+AyAeE98XuHy0wOObw3zrE0zM=\");\n\n_c = UserAPI;\nexport default UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["D:/ReactJS/asmdemo/client/src/api/UserAPI.js"],"names":["React","useEffect","useState","axios","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","setCart","history","setHistory","getUser","res","get","headers","Authorization","data","role","err","alert","response","message","getHistory","addCart","product","check","every","item","_id","quantity","patch","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGI,KAAH,EAAS;AAEL,YAAMS,OAAO,GAAG,YAAW;AACvB,YAAI;AACA,gBAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,aAAV,EAAwB;AACtCC,YAAAA,OAAO,EAAE;AAACC,cAAAA,aAAa,EAAEb;AAAhB;AAD6B,WAAxB,CAAlB;AAIAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAQ,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBX,UAAU,CAAC,IAAD,CAAhC,GAAyCA,UAAU,CAAC,KAAD,CAAnD;AAEAE,UAAAA,OAAO,CAACI,GAAG,CAACI,IAAJ,CAAST,IAAV,CAAP;AAEH,SAVD,CAUE,OAAOW,GAAP,EAAY;AACVC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBK,OAAnB,CAAL;AACH;AACJ,OAdD;;AAgBAV,MAAAA,OAAO;AACV;AACJ,GArBQ,EAqBP,CAACT,KAAD,CArBO,CAAT;AAuBAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGI,KAAH,EAAS;AACL,YAAMoB,UAAU,GAAG,YAAW;AAC1B,cAAMV,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,eAAV,EAA0B;AACxCC,UAAAA,OAAO,EAAE;AAACC,YAAAA,aAAa,EAAEb;AAAhB;AAD+B,SAA1B,CAAlB;AAGH,OAJD;;AAKAoB,MAAAA,UAAU;AACb;AACJ,GATQ,EASP,CAACpB,KAAD,CATO,CAAT;;AAWA,QAAMqB,OAAO,GAAG,MAAOC,OAAP,IAAmB;AAC/B,QAAG,CAACrB,QAAJ,EAAc,OAAOgB,KAAK,CAAC,iCAAD,CAAZ;AAEd,UAAMM,KAAK,GAAGlB,IAAI,CAACmB,KAAL,CAAWC,IAAI,IAAG;AAC5B,aAAOA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAA5B;AACH,KAFa,CAAd;;AAIA,QAAGH,KAAH,EAAS;AACLjB,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU,EAAC,GAAGiB,OAAJ;AAAaK,QAAAA,QAAQ,EAAE;AAAvB,OAAV,CAAD,CAAP;AAEA,YAAM7B,KAAK,CAAC8B,KAAN,CAAY,eAAZ,EAA6B;AAACvB,QAAAA,IAAI,EAAE,CAAC,GAAGA,IAAJ,EAAU,EAAC,GAAGiB,OAAJ;AAAaK,UAAAA,QAAQ,EAAE;AAAvB,SAAV;AAAP,OAA7B,EAA2E;AAC7Ef,QAAAA,OAAO,EAAE;AAACC,UAAAA,aAAa,EAAEb;AAAhB;AADoE,OAA3E,CAAN;AAIH,KAPD,MAOK;AACDiB,MAAAA,KAAK,CAAC,sCAAD,CAAL;AACH;;AACDY,IAAAA,OAAO,CAACC,GAAR,CAAYzB,IAAZ;AACH,GAlBD;;AAoBF,SAAO;AACHJ,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADP;AAEHC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CAFN;AAGHC,IAAAA,IAAI,EAAE,CAACA,IAAD,EAAOC,OAAP,CAHH;AAIHe,IAAAA,OAAO,EAAEA;AAJN,GAAP;AAMD;;GAlEQtB,O;;KAAAA,O;AAoET,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction UserAPI(token) {\r\n    const [isLogged, setIsLogged] = useState(false)\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [cart, setCart] = useState([])\r\n    const [history, setHistory] = useState([])\r\n\r\n    useEffect(() => {\r\n        if(token){\r\n\r\n            const getUser = async () =>{\r\n                try {\r\n                    const res = await axios.get('/user/infor',{\r\n                        headers: {Authorization: token}\r\n                    })\r\n\r\n                    setIsLogged(true)\r\n                    res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\r\n\r\n                    setCart(res.data.cart)\r\n\r\n                } catch (err) {\r\n                    alert(err.response.data.message)\r\n                }\r\n            }\r\n\r\n            getUser()\r\n        }\r\n    },[token])\r\n\r\n    useEffect(() => {\r\n        if(token){\r\n            const getHistory = async () =>{\r\n                const res = await axios.get('/user/history',{\r\n                    headers: {Authorization: token}\r\n                })\r\n            }\r\n            getHistory()\r\n        }\r\n    },[token])\r\n\r\n    const addCart = async (product) => {\r\n        if(!isLogged) return alert(\"Please login to continue buying\")\r\n\r\n        const check = cart.every(item =>{\r\n            return item._id !== product._id\r\n        })\r\n\r\n        if(check){\r\n            setCart([...cart, {...product, quantity: 1}])\r\n\r\n            await axios.patch('/user/addcart', {cart: [...cart, {...product, quantity: 1}]}, {\r\n                headers: {Authorization: token}\r\n            })\r\n\r\n        }else{\r\n            alert(\"This product has been added to cart.\")\r\n        }\r\n        console.log(cart);\r\n    }\r\n\r\n  return {\r\n      isLogged: [isLogged, setIsLogged],\r\n      isAdmin: [isAdmin, setIsAdmin],\r\n      cart: [cart, setCart],\r\n      addCart: addCart,\r\n  }\r\n}\r\n\r\nexport default UserAPI"]},"metadata":{},"sourceType":"module"}